services:
    php:
        build:
            context: .
            dockerfile: .server/docker/Dockerfile
            args:
                APP_UID: 1001 # ðŸ‘ˆ Set this to your host UID: run `id -u` in terminal
                APP_GID: 1001 # ðŸ‘ˆ Set this to your host GID: run `id -g`
        volumes:
            - ./:/app
        working_dir: /app
        # TIP: Get your UID/GID with `id -u` and `id -g` on Linux/macOS
        user: "1001:1001" # ðŸ‘ˆ Same here: match your host UID:GID
        depends_on:
            mysql:
                condition: service_healthy
        environment:
            LARAVEL_ENV_ENCRYPTION_KEY: base64:uAWay8y/e9I5NRRqBoTdUhZ7m6i/x5HAvIJ8BYoxEbU=
            APP_UID: 1001
            APP_GID: 1001
        networks:
            - app-network
        extra_hosts:
            - "host.docker.internal:host-gateway"
        healthcheck:
            test: [ "CMD", "php", "-r", "echo 'OK';" ]
            interval: 10s
            timeout: 3s
            retries: 3

    nginx:
        image: nginx:alpine
        ports:
            - "8080:80"
        volumes:
            - ./:/app
            - ./.server/nginx/default.conf:/etc/nginx/conf.d/default.conf
        depends_on:
            php:
                condition: service_healthy
        networks:
            - app-network
        extra_hosts:
            - "host.docker.internal:host-gateway"

    mysql:
        image: mysql:latest
        restart: always
        environment:
            MYSQL_ROOT_PASSWORD: secret
            MYSQL_PASSWORD: password
            MYSQL_USER: app_user
            MYSQL_DATABASE: auth_api
        volumes:
            - database_data:/var/lib/mysql
            - ./.server/mysql/my.cnf:/etc/my.cnf
            - ./.server/mysql/permissions.sql:/docker-entrypoint-initdb.d/permissions.sql
        ports:
            - "127.0.0.2:3306:3306"
        healthcheck:
            test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
            timeout: 5s
            retries: 5
            start_period: 60s
        networks:
            - app-network

networks:
    app-network:

volumes:
    database_data:
