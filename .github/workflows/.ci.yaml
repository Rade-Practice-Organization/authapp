name: PHPUnit Tests

on:
    push:
        branches: [ "*" ]
    pull_request:
        branches: [ master ]

concurrency:
    group: ci-${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: true

jobs:
    run-tests:
        name: run-tests
        runs-on: ubuntu-latest
        env:
            APP_ENV: testing

            DB_HOST: 127.0.0.1
            DB_DATABASE: auth_api_test
            DB_USERNAME: root
            DB_PASSWORD: root
        steps:
            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: '8.3'
            - name: Checkout repository
              uses: actions/checkout@v4
            - name: Start MySQL
              run: sudo /etc/init.d/mysql start
            - name: Create MySQL database
              run: |
                  mysql -e "CREATE DATABASE IF NOT EXISTS $DB_DATABASE;" -u$DB_USERNAME -p$DB_PASSWORD
            - name: Copy .env
              run: php -r "file_exists('.env') || copy('.env.example', '.env');"
            - name: Get composer cache directory
              id: composer-cache
              run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
            - name: Cache composer dependencies
              uses: actions/cache@v4
              with:
                  path: ${{ steps.composer-cache.outputs.dir }}
                  key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
                  restore-keys: ${{ runner.os }}-composer-
            - name: Install Composer dependencies
              if: steps.cache-vendor.outputs.cache-hit != 'true'
              run: composer install -q --optimize-autoloader --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
            - name: Generate key
              run: php artisan key:generate
            - name: Link store
              run: php artisan storage:link
            - name: Setup directory permissions
              run: chmod -R 777 storage bootstrap/cache
            - name: Build route cache
              run: php artisan route:cache
            - name: Migrate database
              run: php artisan migrate:fresh
            - name: Run tests
              env:
                  MAIL_MAILER: array
                  QUEUE_CONNECTION: sync
                  SESSION_DRIVER: array
                  CACHE_DRIVER: array
              run: php artisan test --parallel --stop-on-failure --stop-on-error --coverage-clover=clover.xml
            - name: Code coverage check
              run: bash .github/scripts/code_coverage.sh
              env:
                  PHPUNIT_CODE_COVERAGE_PERCENTAGE_MINIMUM: 90

